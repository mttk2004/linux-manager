#!/bin/bash

# Module d·ªçn d·∫πp h·ªá th·ªëng - D·ªçn s·∫°ch c√°c g√≥i kh√¥ng c·∫ßn thi·∫øt v√† cache
# T·∫£i utils t·ª´ core
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CORE_DIR="$(cd "${SCRIPT_DIR}/../../core" && pwd)"

# Ch·ªâ t·∫£i c√°c module core n·∫øu ch∆∞a ƒë∆∞·ª£c t·∫£i
if ! declare -f log_info >/dev/null 2>&1; then
    source "${CORE_DIR}/config.sh"
fi

if ! declare -f read_single_key >/dev/null 2>&1; then
    source "${CORE_DIR}/utils.sh"
fi

if ! declare -f print_boxed_message >/dev/null 2>&1; then
    source "${CORE_DIR}/ui.sh"
fi

# Bi·ªÉu t∆∞·ª£ng b·ªï sung
ICON_CLEAN="üßπ"
ICON_ORPHAN="üß©"
ICON_CACHE="üíæ"
ICON_FOREIGN="üß≠"
ICON_MANUAL="üìã"
ICON_AUTO="üî•"

# Hi·ªÉn th·ªã menu d·ªçn d·∫πp h·ªá th·ªëng
display_cleanup_menu() {
    clear
    echo -e "${LIGHT_CYAN}"
    echo "    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó "
    echo "    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó"
    echo "    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù"
    echo "    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù "
    echo "    ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë     "
    echo "     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù     "
    echo -e "${NC}"

    echo -e "${DARK_GRAY}    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    echo -e "${WHITE}                    ${ICON_CLEAN} ${BOLD}D·ªåN D·∫∏P H·ªÜ TH·ªêNG${NC} ${ICON_CLEAN}"
    echo -e "${DARK_GRAY}    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    echo

    # Menu items v·ªõi style ƒë∆°n gi·∫£n v√† hi·ªán ƒë·∫°i
    echo -e "  ${ICON_ORPHAN} ${GREEN}${BOLD}[1]${NC}  ${WHITE}D·ªçn g√≥i m·ªì c√¥i (Orphaned Packages)${NC}"
    echo -e "      ${GRAY}${DIM}G·ª° c√°c g√≥i kh√¥ng c√≤n ƒë∆∞·ª£c ph·ª• thu·ªôc${NC}"
    echo

    echo -e "  ${ICON_CACHE} ${GREEN}${BOLD}[2]${NC}  ${WHITE}D·ªçn cache Pacman${NC}"
    echo -e "      ${GRAY}${DIM}X√≥a c√°c phi√™n b·∫£n c≈© trong cache${NC}"
    echo

    echo -e "  ${ICON_MANUAL} ${GREEN}${BOLD}[3]${NC}  ${WHITE}Xem g√≥i c√†i th·ªß c√¥ng${NC}"
    echo -e "      ${GRAY}${DIM}Hi·ªÉn th·ªã c√°c g√≥i ƒë∆∞·ª£c c√†i b·∫±ng tay${NC}"
    echo

    echo -e "  ${ICON_PACKAGE} ${GREEN}${BOLD}[4]${NC}  ${WHITE}D·ªçn AUR v√† cache${NC}"
    echo -e "      ${GRAY}${DIM}D·ªçn s·∫°ch g√≥i AUR m·ªì c√¥i v√† cache${NC}"
    echo

    echo -e "  ${ICON_FOREIGN} ${GREEN}${BOLD}[5]${NC}  ${WHITE}Ki·ªÉm tra g√≥i ngo·∫°i lai${NC}"
    echo -e "      ${GRAY}${DIM}G√≥i kh√¥ng c√≤n trong repository${NC}"
    echo

    echo -e "  ${ICON_AUTO} ${GREEN}${BOLD}[6]${NC}  ${WHITE}D·ªçn d·∫πp t·ª± ƒë·ªông (Safe Mode)${NC}"
    echo -e "      ${GRAY}${DIM}Ch·∫°y t·∫•t c·∫£ c√°c thao t√°c d·ªçn d·∫πp an to√†n${NC}"
    echo

    echo -e "  ${ICON_EXIT} ${LIGHT_RED}${BOLD}[7]${NC}  ${WHITE}Quay l·∫°i menu ch√≠nh${NC}"
    echo -e "      ${GRAY}${DIM}Tr·ªü v·ªÅ menu ch√≠nh${NC}"
    echo

    echo -e "${DARK_GRAY}    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    echo -e "    ${LIGHT_CYAN}${ICON_INFO} ${WHITE}Ch·ªçn m·ªôt t√πy ch·ªçn t·ª´ ${LIGHT_GREEN}${BOLD}1-7${NC}${WHITE} v√† nh·∫•n Enter${NC}"
    echo -e "${DARK_GRAY}    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    echo
}

# Ki·ªÉm tra g√≥i m·ªì c√¥i
check_orphaned_packages() {
    display_section_header "KI·ªÇM TRA G√ìI M·ªí C√îI" "${ICON_ORPHAN}"
    
    print_boxed_message "ƒêang t√¨m ki·∫øm c√°c g√≥i m·ªì c√¥i..." "info"
    
    # Ki·ªÉm tra g√≥i m·ªì c√¥i
    local orphans=$(pacman -Qdtq)
    
    if [ -z "$orphans" ]; then
        print_boxed_message "Kh√¥ng t√¨m th·∫•y g√≥i m·ªì c√¥i n√†o. H·ªá th·ªëng ƒë√£ s·∫°ch!" "success"
        return 0
    fi
    
    echo -e "${YELLOW}${BOLD}C√°c g√≥i m·ªì c√¥i ƒë∆∞·ª£c t√¨m th·∫•y:${NC}"
    echo -e "${DARK_GRAY}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    pacman -Qdt
    echo -e "${DARK_GRAY}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    
    local count=$(echo "$orphans" | wc -l)
    echo -e "${LIGHT_CYAN}${ICON_INFO} T·ªïng c·ªông: ${WHITE}${BOLD}$count${NC} ${LIGHT_CYAN}g√≥i m·ªì c√¥i${NC}"
    echo
    
    if confirm_yn "B·∫°n c√≥ mu·ªën g·ª° t·∫•t c·∫£ c√°c g√≥i m·ªì c√¥i n√†y kh√¥ng?" "n"; then
        print_boxed_message "ƒêang g·ª° c√°c g√≥i m·ªì c√¥i..." "info"
        
        if sudo pacman -Rns $orphans; then
            log_info "ƒê√£ g·ª° th√†nh c√¥ng c√°c g√≥i m·ªì c√¥i"
            print_boxed_message "ƒê√£ g·ª° th√†nh c√¥ng t·∫•t c·∫£ g√≥i m·ªì c√¥i!" "success"
        else
            log_error "L·ªói khi g·ª° c√°c g√≥i m·ªì c√¥i"
            print_boxed_message "C√≥ l·ªói x·∫£y ra khi g·ª° g√≥i m·ªì c√¥i!" "error"
        fi
    else
        print_boxed_message "ƒê√£ h·ªßy vi·ªác g·ª° g√≥i m·ªì c√¥i" "info"
    fi
}

# D·ªçn cache Pacman
cleanup_pacman_cache() {
    display_section_header "D·ªåN CACHE PACMAN" "${ICON_CACHE}"
    
    # Ki·ªÉm tra xem paccache c√≥ ƒë∆∞·ª£c c√†i ƒë·∫∑t kh√¥ng
    if ! command -v paccache >/dev/null 2>&1; then
        print_boxed_message "paccache kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang c√†i ƒë·∫∑t pacman-contrib..." "info"
        if sudo pacman -S --noconfirm pacman-contrib; then
            print_boxed_message "ƒê√£ c√†i ƒë·∫∑t pacman-contrib th√†nh c√¥ng!" "success"
        else
            print_boxed_message "Kh√¥ng th·ªÉ c√†i ƒë·∫∑t pacman-contrib. H·ªßy thao t√°c." "error"
            return 1
        fi
    fi
    
    # Hi·ªÉn th·ªã th√¥ng tin cache hi·ªán t·∫°i
    local cache_size=$(du -sh /var/cache/pacman/pkg 2>/dev/null | cut -f1)
    echo -e "${YELLOW}${BOLD}Th√¥ng tin cache hi·ªán t·∫°i:${NC}"
    echo -e "${LIGHT_CYAN}  üìÅ ƒê∆∞·ªùng d·∫´n: ${WHITE}/var/cache/pacman/pkg${NC}"
    echo -e "${LIGHT_CYAN}  üìè K√≠ch th∆∞·ªõc: ${WHITE}$cache_size${NC}"
    echo
    
    echo -e "${WHITE}${BOLD}T√πy ch·ªçn d·ªçn cache:${NC}"
    echo -e "  ${GREEN}[1]${NC} Gi·ªØ l·∫°i 3 phi√™n b·∫£n g·∫ßn nh·∫•t (khuy·∫øn ngh·ªã)"
    echo -e "  ${GREEN}[2]${NC} Gi·ªØ l·∫°i 1 phi√™n b·∫£n g·∫ßn nh·∫•t"
    echo -e "  ${GREEN}[3]${NC} X√≥a to√†n b·ªô cache (c·ª±c ƒëoan)"
    echo -e "  ${GREEN}[4]${NC} H·ªßy"
    echo
    
    echo -e -n "${LIGHT_CYAN}${ICON_ARROW} ${WHITE}Ch·ªçn t√πy ch·ªçn${NC} ${DARK_GRAY}[${LIGHT_GREEN}1-4${DARK_GRAY}]${NC}: "
    local choice=$(read_single_key)
    echo "$choice"
    echo
    
    case $choice in
        1)
            print_boxed_message "ƒêang d·ªçn cache, gi·ªØ l·∫°i 3 phi√™n b·∫£n g·∫ßn nh·∫•t..." "info"
            if sudo paccache -r; then
                log_info "ƒê√£ d·ªçn cache pacman th√†nh c√¥ng (gi·ªØ 3 phi√™n b·∫£n)"
                print_boxed_message "ƒê√£ d·ªçn cache th√†nh c√¥ng!" "success"
            else
                log_error "L·ªói khi d·ªçn cache pacman"
                print_boxed_message "C√≥ l·ªói x·∫£y ra khi d·ªçn cache!" "error"
            fi
            ;;
        2)
            print_boxed_message "ƒêang d·ªçn cache, gi·ªØ l·∫°i 1 phi√™n b·∫£n g·∫ßn nh·∫•t..." "info"
            if sudo paccache -rk1; then
                log_info "ƒê√£ d·ªçn cache pacman th√†nh c√¥ng (gi·ªØ 1 phi√™n b·∫£n)"
                print_boxed_message "ƒê√£ d·ªçn cache th√†nh c√¥ng!" "success"
            else
                log_error "L·ªói khi d·ªçn cache pacman"
                print_boxed_message "C√≥ l·ªói x·∫£y ra khi d·ªçn cache!" "error"
            fi
            ;;
        3)
            if confirm_yn "C·∫¢NH B√ÅO: X√≥a to√†n b·ªô cache c√≥ th·ªÉ khi·∫øn b·∫°n kh√¥ng th·ªÉ downgrade g√≥i. Ti·∫øp t·ª•c?" "n"; then
                print_boxed_message "ƒêang x√≥a to√†n b·ªô cache..." "info"
                if sudo paccache -rk0; then
                    log_info "ƒê√£ x√≥a to√†n b·ªô cache pacman"
                    print_boxed_message "ƒê√£ x√≥a to√†n b·ªô cache th√†nh c√¥ng!" "success"
                else
                    log_error "L·ªói khi x√≥a to√†n b·ªô cache pacman"
                    print_boxed_message "C√≥ l·ªói x·∫£y ra khi x√≥a cache!" "error"
                fi
            else
                print_boxed_message "ƒê√£ h·ªßy vi·ªác x√≥a to√†n b·ªô cache" "info"
            fi
            ;;
        4|*)
            print_boxed_message "ƒê√£ h·ªßy vi·ªác d·ªçn cache" "info"
            ;;
    esac
    
    # Hi·ªÉn th·ªã k√≠ch th∆∞·ªõc cache sau khi d·ªçn
    local new_cache_size=$(du -sh /var/cache/pacman/pkg 2>/dev/null | cut -f1)
    echo -e "${LIGHT_GREEN}${ICON_INFO} K√≠ch th∆∞·ªõc cache sau khi d·ªçn: ${WHITE}$new_cache_size${NC}"
}

# Xem g√≥i c√†i th·ªß c√¥ng
review_manual_packages() {
    display_section_header "G√ìI C√ÄI TH·ª¶ C√îNG" "${ICON_MANUAL}"
    
    print_boxed_message "ƒêang t√¨m ki·∫øm c√°c g√≥i ƒë∆∞·ª£c c√†i th·ªß c√¥ng..." "info"
    
    echo -e "${YELLOW}${BOLD}C√°c g√≥i ƒë∆∞·ª£c c√†i th·ªß c√¥ng (kh√¥ng t√≠nh dependencies):${NC}"
    echo -e "${DARK_GRAY}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    pacman -Qent
    echo -e "${DARK_GRAY}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    
    local count=$(pacman -Qentq | wc -l)
    echo -e "${LIGHT_CYAN}${ICON_INFO} T·ªïng c·ªông: ${WHITE}${BOLD}$count${NC} ${LIGHT_CYAN}g√≥i ƒë∆∞·ª£c c√†i th·ªß c√¥ng${NC}"
    echo
    
    print_boxed_message "H√£y r√† so√°t danh s√°ch ƒë·ªÉ t√¨m g√≥i kh√¥ng c√≤n s·ª≠ d·ª•ng" "info"
    echo -e "${GRAY}${DIM}ƒê·ªÉ g·ª° g√≥i c·ª• th·ªÉ, s·ª≠ d·ª•ng: ${WHITE}sudo pacman -Rns <t√™n_g√≥i>${DIM}${NC}"
}

# D·ªçn AUR
cleanup_aur() {
    display_section_header "D·ªåN AUR V√Ä CACHE" "${ICON_PACKAGE}"
    
    # Ki·ªÉm tra AUR helper
    local aur_helper=""
    if command -v yay >/dev/null 2>&1; then
        aur_helper="yay"
    elif command -v paru >/dev/null 2>&1; then
        aur_helper="paru"
    else
        print_boxed_message "Kh√¥ng t√¨m th·∫•y AUR helper (yay ho·∫∑c paru). B·ªè qua b∆∞·ªõc n√†y." "warning"
        return 0
    fi
    
    echo -e "${LIGHT_CYAN}${ICON_INFO} T√¨m th·∫•y AUR helper: ${WHITE}${BOLD}$aur_helper${NC}"
    echo
    
    if [ "$aur_helper" = "yay" ]; then
        echo -e "${WHITE}${BOLD}T√πy ch·ªçn d·ªçn AUR:${NC}"
        echo -e "  ${GREEN}[1]${NC} D·ªçn g√≥i AUR m·ªì c√¥i v√† dependencies kh√¥ng d√πng (yay -Yc)"
        echo -e "  ${GREEN}[2]${NC} D·ªçn cache c·ªßa yay (yay -Sc)"
        echo -e "  ${GREEN}[3]${NC} Th·ª±c hi·ªán c·∫£ hai"
        echo -e "  ${GREEN}[4]${NC} H·ªßy"
        echo
        
        echo -e -n "${LIGHT_CYAN}${ICON_ARROW} ${WHITE}Ch·ªçn t√πy ch·ªçn${NC} ${DARK_GRAY}[${LIGHT_GREEN}1-4${DARK_GRAY}]${NC}: "
        local choice=$(read_single_key)
        echo "$choice"
        echo
        
        case $choice in
            1)
                print_boxed_message "ƒêang d·ªçn g√≥i AUR m·ªì c√¥i..." "info"
                if yay -Yc; then
                    log_info "ƒê√£ d·ªçn g√≥i AUR m·ªì c√¥i th√†nh c√¥ng"
                    print_boxed_message "ƒê√£ d·ªçn g√≥i AUR m·ªì c√¥i th√†nh c√¥ng!" "success"
                else
                    log_error "L·ªói khi d·ªçn g√≥i AUR m·ªì c√¥i"
                    print_boxed_message "C√≥ l·ªói x·∫£y ra khi d·ªçn AUR!" "error"
                fi
                ;;
            2)
                print_boxed_message "ƒêang d·ªçn cache yay..." "info"
                if yay -Sc; then
                    log_info "ƒê√£ d·ªçn cache yay th√†nh c√¥ng"
                    print_boxed_message "ƒê√£ d·ªçn cache yay th√†nh c√¥ng!" "success"
                else
                    log_error "L·ªói khi d·ªçn cache yay"
                    print_boxed_message "C√≥ l·ªói x·∫£y ra khi d·ªçn cache yay!" "error"
                fi
                ;;
            3)
                print_boxed_message "ƒêang d·ªçn g√≥i AUR m·ªì c√¥i v√† cache..." "info"
                if yay -Yc && yay -Sc; then
                    log_info "ƒê√£ d·ªçn AUR v√† cache th√†nh c√¥ng"
                    print_boxed_message "ƒê√£ d·ªçn AUR v√† cache th√†nh c√¥ng!" "success"
                else
                    log_error "L·ªói khi d·ªçn AUR v√† cache"
                    print_boxed_message "C√≥ l·ªói x·∫£y ra khi d·ªçn AUR!" "error"
                fi
                ;;
            4|*)
                print_boxed_message "ƒê√£ h·ªßy vi·ªác d·ªçn AUR" "info"
                ;;
        esac
    else
        # paru
        print_boxed_message "ƒêang d·ªçn v·ªõi paru..." "info"
        if paru -c; then
            log_info "ƒê√£ d·ªçn AUR v·ªõi paru th√†nh c√¥ng"
            print_boxed_message "ƒê√£ d·ªçn AUR th√†nh c√¥ng!" "success"
        else
            log_error "L·ªói khi d·ªçn AUR v·ªõi paru"
            print_boxed_message "C√≥ l·ªói x·∫£y ra khi d·ªçn AUR!" "error"
        fi
    fi
}

# Ki·ªÉm tra g√≥i ngo·∫°i lai
check_foreign_packages() {
    display_section_header "KI·ªÇM TRA G√ìI NGO·∫†I LAI" "${ICON_FOREIGN}"
    
    print_boxed_message "ƒêang t√¨m ki·∫øm g√≥i kh√¥ng c√≤n trong repository..." "info"
    
    local foreign_packages=$(pacman -Qmq)
    
    if [ -z "$foreign_packages" ]; then
        print_boxed_message "Kh√¥ng t√¨m th·∫•y g√≥i ngo·∫°i lai n√†o." "success"
        return 0
    fi
    
    echo -e "${YELLOW}${BOLD}C√°c g√≥i ngo·∫°i lai (kh√¥ng c√≤n trong repository):${NC}"
    echo -e "${DARK_GRAY}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    pacman -Qm
    echo -e "${DARK_GRAY}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    
    local count=$(echo "$foreign_packages" | wc -l)
    echo -e "${LIGHT_CYAN}${ICON_INFO} T·ªïng c·ªông: ${WHITE}${BOLD}$count${NC} ${LIGHT_CYAN}g√≥i ngo·∫°i lai${NC}"
    echo
    
    print_boxed_message "H√£y ki·ªÉm tra xem g√≥i n√†o kh√¥ng c√≤n c·∫ßn thi·∫øt" "info"
    echo -e "${GRAY}${DIM}ƒê·ªÉ g·ª° g√≥i c·ª• th·ªÉ, s·ª≠ d·ª•ng: ${WHITE}sudo pacman -Rns <t√™n_g√≥i>${DIM}${NC}"
}

# D·ªçn d·∫πp t·ª± ƒë·ªông (Safe Mode)
auto_cleanup_safe() {
    display_section_header "D·ªåN D·∫∏P T·ª∞ ƒê·ªòNG (SAFE MODE)" "${ICON_AUTO}"
    
    print_boxed_message "Ch·∫ø ƒë·ªô d·ªçn d·∫πp t·ª± ƒë·ªông s·∫Ω th·ª±c hi·ªán:" "info"
    echo -e "${LIGHT_CYAN}  ‚Ä¢ ${WHITE}G·ª° g√≥i m·ªì c√¥i${NC}"
    echo -e "${LIGHT_CYAN}  ‚Ä¢ ${WHITE}D·ªçn cache pacman (gi·ªØ 2 phi√™n b·∫£n)${NC}"
    echo -e "${LIGHT_CYAN}  ‚Ä¢ ${WHITE}D·ªçn AUR m·ªì c√¥i (n·∫øu c√≥ yay/paru)${NC}"
    echo
    
    if ! confirm_yn "B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c v·ªõi ch·∫ø ƒë·ªô d·ªçn d·∫πp t·ª± ƒë·ªông kh√¥ng?" "y"; then
        print_boxed_message "ƒê√£ h·ªßy d·ªçn d·∫πp t·ª± ƒë·ªông" "info"
        return 0
    fi
    
    log_info "B·∫Øt ƒë·∫ßu d·ªçn d·∫πp t·ª± ƒë·ªông h·ªá th·ªëng"
    
    # 1. D·ªçn g√≥i m·ªì c√¥i
    echo -e "${LIGHT_YELLOW}${ICON_GEAR} B∆∞·ªõc 1: D·ªçn g√≥i m·ªì c√¥i...${NC}"
    local orphans=$(pacman -Qdtq)
    if [ -n "$orphans" ]; then
        if sudo pacman -Rns $orphans; then
            print_boxed_message "‚úì ƒê√£ g·ª° g√≥i m·ªì c√¥i th√†nh c√¥ng" "success"
            log_info "Auto cleanup: ƒê√£ g·ª° g√≥i m·ªì c√¥i th√†nh c√¥ng"
        else
            print_boxed_message "‚úó L·ªói khi g·ª° g√≥i m·ªì c√¥i" "error"
            log_error "Auto cleanup: L·ªói khi g·ª° g√≥i m·ªì c√¥i"
        fi
    else
        print_boxed_message "‚úì Kh√¥ng c√≥ g√≥i m·ªì c√¥i" "success"
    fi
    
    # 2. D·ªçn cache pacman
    echo -e "${LIGHT_YELLOW}${ICON_GEAR} B∆∞·ªõc 2: D·ªçn cache pacman...${NC}"
    if command -v paccache >/dev/null 2>&1; then
        if sudo paccache -rk2; then
            print_boxed_message "‚úì ƒê√£ d·ªçn cache pacman th√†nh c√¥ng" "success"
            log_info "Auto cleanup: ƒê√£ d·ªçn cache pacman th√†nh c√¥ng"
        else
            print_boxed_message "‚úó L·ªói khi d·ªçn cache pacman" "error"
            log_error "Auto cleanup: L·ªói khi d·ªçn cache pacman"
        fi
    else
        print_boxed_message "‚ö† paccache kh√¥ng c√≥ s·∫µn, b·ªè qua" "warning"
    fi
    
    # 3. D·ªçn AUR
    echo -e "${LIGHT_YELLOW}${ICON_GEAR} B∆∞·ªõc 3: D·ªçn AUR...${NC}"
    if command -v yay >/dev/null 2>&1; then
        if yay -Yc --noconfirm; then
            print_boxed_message "‚úì ƒê√£ d·ªçn AUR v·ªõi yay th√†nh c√¥ng" "success"
            log_info "Auto cleanup: ƒê√£ d·ªçn AUR v·ªõi yay th√†nh c√¥ng"
        else
            print_boxed_message "‚úó L·ªói khi d·ªçn AUR v·ªõi yay" "error"
            log_error "Auto cleanup: L·ªói khi d·ªçn AUR v·ªõi yay"
        fi
    elif command -v paru >/dev/null 2>&1; then
        if paru -c --noconfirm; then
            print_boxed_message "‚úì ƒê√£ d·ªçn AUR v·ªõi paru th√†nh c√¥ng" "success"
            log_info "Auto cleanup: ƒê√£ d·ªçn AUR v·ªõi paru th√†nh c√¥ng"
        else
            print_boxed_message "‚úó L·ªói khi d·ªçn AUR v·ªõi paru" "error"
            log_error "Auto cleanup: L·ªói khi d·ªçn AUR v·ªõi paru"
        fi
    else
        print_boxed_message "‚ö† Kh√¥ng t√¨m th·∫•y AUR helper, b·ªè qua" "warning"
    fi
    
    echo
    print_boxed_message "üéâ Ho√†n t·∫•t d·ªçn d·∫πp t·ª± ƒë·ªông!" "success"
    log_info "Ho√†n t·∫•t d·ªçn d·∫πp t·ª± ƒë·ªông h·ªá th·ªëng"
}

# H√†m ch√≠nh ƒë·ªÉ qu·∫£n l√Ω d·ªçn d·∫πp h·ªá th·ªëng
manage_system_cleanup() {
    local choice

    while true; do
        display_cleanup_menu
        echo -e -n "${LIGHT_CYAN}${ICON_ARROW} ${WHITE}${BOLD}Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n${NC} ${DARK_GRAY}[${LIGHT_GREEN}1-7${DARK_GRAY}]${NC}: "
        choice=$(read_single_key)
        echo "$choice"
        echo

        case $choice in
            1)
                check_orphaned_packages
                ;;
            2)
                cleanup_pacman_cache
                ;;
            3)
                review_manual_packages
                ;;
            4)
                cleanup_aur
                ;;
            5)
                check_foreign_packages
                ;;
            6)
                auto_cleanup_safe
                ;;
            7)
                return 0
                ;;
            *)
                print_boxed_message "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng ch·ªçn s·ªë t·ª´ 1-7." "error"
                ;;
        esac

        wait_for_user
    done
}
