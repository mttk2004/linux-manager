#!/bin/bash

# Menu Template System - V2 Architecture
# Provides standardized menu configurations and templates

# Menu template directory
MENU_TEMPLATES_DIR="${TEMPLATES_DIR}/menus"

# Create menu template for package manager
create_package_menu_template() {
    declare -gA PACKAGE_MENU_CONFIG=(
        [ascii_header]="package"
        [title]="Package Manager"
        [header]="QU·∫¢N L√ù G√ìI"
        [header_icon]="üì¶"
        
        [option_1_title]="C√†i ƒë·∫∑t g√≥i t·ª´ kho ch√≠nh th·ª©c (Pacman)"
        [option_1_description]="T√¨m ki·∫øm v√† c√†i ƒë·∫∑t g√≥i ph·∫ßn m·ªÅm t·ª´ kho Arch Linux"
        [option_1_icon]="üì¶"
        [option_1_action]="install_pacman_packages"
        
        [option_2_title]="C√†i ƒë·∫∑t g√≥i t·ª´ AUR"
        [option_2_description]="C√†i ƒë·∫∑t ph·∫ßn m·ªÅm t·ª´ Arch User Repository"
        [option_2_icon]="üèóÔ∏è"
        [option_2_action]="install_aur_packages"
        
        [option_3_title]="C√†i ƒë·∫∑t g√≥i Flatpak"
        [option_3_description]="Qu·∫£n l√Ω v√† c√†i ƒë·∫∑t ·ª©ng d·ª•ng Flatpak"
        [option_3_icon]="üì±"
        [option_3_action]="install_flatpak_packages"
        
        [option_4_title]="G·ª° c√†i ƒë·∫∑t g√≥i"
        [option_4_description]="X√≥a c√°c g√≥i ph·∫ßn m·ªÅm kh√¥ng c·∫ßn thi·∫øt"
        [option_4_icon]="üóëÔ∏è"
        [option_4_action]="remove_packages"
        
        [option_5_title]="Quay l·∫°i menu ch√≠nh"
        [option_5_description]="Tr·ªü v·ªÅ menu ch√≠nh c·ªßa ·ª©ng d·ª•ng"
        [option_5_icon]="üîô"
        [option_5_action]="return_main"
        
        [min_choice]=1
        [max_choice]=5
        [exit_option]=5
    )
    
    export PACKAGE_MENU_CONFIG
}

# Create menu template for system management
create_system_menu_template() {
    declare -gA SYSTEM_MENU_CONFIG=(
        [ascii_header]="system"
        [title]="System Management"
        [header]="QU·∫¢N L√ù H·ªÜ TH·ªêNG"
        [header_icon]="‚öôÔ∏è"
        
        [option_1_title]="C·∫•u h√¨nh h·ªá th·ªëng"
        [option_1_description]="T√πy ch·ªânh c√°c c√†i ƒë·∫∑t h·ªá th·ªëng v√† m√¥i tr∆∞·ªùng"
        [option_1_icon]="‚öôÔ∏è"
        [option_1_action]="configure_system"
        
        [option_2_title]="D·ªçn d·∫πp h·ªá th·ªëng"
        [option_2_description]="X√≥a file t·∫°m, cache v√† g√≥i kh√¥ng c·∫ßn thi·∫øt"
        [option_2_icon]="üßπ"
        [option_2_action]="cleanup_system"
        
        [option_3_title]="C·∫≠p nh·∫≠t h·ªá th·ªëng"
        [option_3_description]="C·∫≠p nh·∫≠t to√†n b·ªô h·ªá th·ªëng v√† c√°c g√≥i"
        [option_3_icon]="üîÑ"
        [option_3_action]="update_system"
        
        [option_4_title]="Sao l∆∞u v√† ph·ª•c h·ªìi"
        [option_4_description]="Qu·∫£n l√Ω sao l∆∞u c·∫•u h√¨nh v√† d·ªØ li·ªáu"
        [option_4_icon]="üíæ"
        [option_4_action]="backup_restore"
        
        [option_5_title]="Quay l·∫°i menu ch√≠nh"
        [option_5_description]="Tr·ªü v·ªÅ menu ch√≠nh c·ªßa ·ª©ng d·ª•ng"
        [option_5_icon]="üîô"
        [option_5_action]="return_main"
        
        [min_choice]=1
        [max_choice]=5
        [exit_option]=5
    )
    
    export SYSTEM_MENU_CONFIG
}

# Create menu template for development environment
create_dev_menu_template() {
    declare -gA DEV_MENU_CONFIG=(
        [ascii_header]="main"
        [title]="Development Environment"
        [header]="M√îI TR∆Ø·ªúNG PH√ÅT TRI·ªÇN"
        [header_icon]="üíª"
        
        [option_1_title]="C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng PHP"
        [option_1_description]="C√†i ƒë·∫∑t PHP, Composer v√† Laravel development tools"
        [option_1_icon]="üêò"
        [option_1_action]="setup_php_environment"
        
        [option_2_title]="C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng NodeJS"
        [option_2_description]="C√†i ƒë·∫∑t NodeJS, NPM v√† c√°c c√¥ng c·ª• development"
        [option_2_icon]="üü¢"
        [option_2_action]="setup_nodejs_environment"
        
        [option_3_title]="C√†i ƒë·∫∑t Docker"
        [option_3_description]="C√†i ƒë·∫∑t v√† c·∫•u h√¨nh Docker container platform"
        [option_3_icon]="üê≥"
        [option_3_action]="setup_docker_environment"
        
        [option_4_title]="Code Editor & IDE"
        [option_4_description]="C√†i ƒë·∫∑t VSCode, Vim v√† c√°c editor kh√°c"
        [option_4_icon]="üìù"
        [option_4_action]="setup_editors"
        
        [option_5_title]="Git & Version Control"
        [option_5_description]="C·∫•u h√¨nh Git v√† c√°c c√¥ng c·ª• version control"
        [option_5_icon]="üåø"
        [option_5_action]="setup_version_control"
        
        [option_6_title]="Quay l·∫°i menu ch√≠nh"
        [option_6_description]="Tr·ªü v·ªÅ menu ch√≠nh c·ªßa ·ª©ng d·ª•ng"
        [option_6_icon]="üîô"
        [option_6_action]="return_main"
        
        [min_choice]=1
        [max_choice]=6
        [exit_option]=6
    )
    
    export DEV_MENU_CONFIG
}

# Create main menu template
create_main_menu_template() {
    declare -gA MAIN_MENU_CONFIG=(
        [ascii_header]="main"
        [title]="Linux Manager - C√¥ng c·ª• qu·∫£n l√Ω h·ªá th·ªëng Arch Linux"
        [header]="MENU CH√çNH"
        [header_icon]="üè†"
        
        [option_1_title]="Qu·∫£n l√Ω g√≥i"
        [option_1_description]="C√†i ƒë·∫∑t, g·ª° b·ªè v√† qu·∫£n l√Ω c√°c g√≥i ph·∫ßn m·ªÅm"
        [option_1_icon]="üì¶"
        [option_1_action]="manage_packages"
        
        [option_2_title]="Qu·∫£n l√Ω h·ªá th·ªëng"
        [option_2_description]="C·∫•u h√¨nh, d·ªçn d·∫πp v√† b·∫£o tr√¨ h·ªá th·ªëng"
        [option_2_icon]="‚öôÔ∏è"
        [option_2_action]="manage_system"
        
        [option_3_title]="M√¥i tr∆∞·ªùng ph√°t tri·ªÉn"
        [option_3_description]="C√†i ƒë·∫∑t v√† c·∫•u h√¨nh c√¥ng c·ª• l·∫≠p tr√¨nh"
        [option_3_icon]="üíª"
        [option_3_action]="manage_development"
        
        [option_4_title]="C·∫•u h√¨nh ng∆∞·ªùi d√πng"
        [option_4_description]="T√πy ch·ªânh shell, dotfiles v√† m√¥i tr∆∞·ªùng c√° nh√¢n"
        [option_4_icon]="üë§"
        [option_4_action]="manage_user_config"
        
        [option_5_title]="Th√¥ng tin h·ªá th·ªëng"
        [option_5_description]="Xem th√¥ng tin ph·∫ßn c·ª©ng v√† tr·∫°ng th√°i h·ªá th·ªëng"
        [option_5_icon]="üìä"
        [option_5_action]="show_system_info"
        
        [option_6_title]="Tho√°t"
        [option_6_description]="Tho√°t kh·ªèi Linux Manager"
        [option_6_icon]="üö™"
        [option_6_action]="exit_application"
        
        [min_choice]=1
        [max_choice]=6
        [exit_option]=6
    )
    
    export MAIN_MENU_CONFIG
}

# Create cleanup menu template
create_cleanup_menu_template() {
    declare -gA CLEANUP_MENU_CONFIG=(
        [ascii_header]="cleanup"
        [title]="System Cleanup"
        [header]="D·ªåN D·∫∏P H·ªÜ TH·ªêNG"
        [header_icon]="üßπ"
        
        [option_1_title]="D·ªçn d·∫πp cache Pacman"
        [option_1_description]="X√≥a cache g√≥i ƒë√£ t·∫£i v·ªÅ t·ª´ Pacman"
        [option_1_icon]="üíæ"
        [option_1_action]="cleanup_pacman_cache"
        
        [option_2_title]="Lo·∫°i b·ªè g√≥i m·ªì c√¥i"
        [option_2_description]="G·ª° b·ªè c√°c g√≥i kh√¥ng ƒë∆∞·ª£c dependency n√†o s·ª≠ d·ª•ng"
        [option_2_icon]="üß©"
        [option_2_action]="remove_orphan_packages"
        
        [option_3_title]="X√≥a g√≥i foreign"
        [option_3_description]="Qu·∫£n l√Ω c√°c g√≥i kh√¥ng c√≥ trong repository ch√≠nh th·ª©c"
        [option_3_icon]="üß≠"
        [option_3_action]="manage_foreign_packages"
        
        [option_4_title]="X√≥a file t·∫°m h·ªá th·ªëng"
        [option_4_description]="D·ªçn d·∫πp /tmp, logs v√† c√°c file t·∫°m th·ªùi"
        [option_4_icon]="üóëÔ∏è"
        [option_4_action]="cleanup_temp_files"
        
        [option_5_title]="D·ªçn d·∫πp user cache"
        [option_5_description]="X√≥a cache ·ª©ng d·ª•ng v√† browser c·ªßa user"
        [option_5_icon]="üë§"
        [option_5_action]="cleanup_user_cache"
        
        [option_6_title]="D·ªçn d·∫πp to√†n di·ªán"
        [option_6_description]="Th·ª±c hi·ªán t·∫•t c·∫£ c√°c t√°c v·ª• d·ªçn d·∫πp tr√™n"
        [option_6_icon]="üî•"
        [option_6_action]="comprehensive_cleanup"
        
        [option_7_title]="Quay l·∫°i menu h·ªá th·ªëng"
        [option_7_description]="Tr·ªü v·ªÅ menu qu·∫£n l√Ω h·ªá th·ªëng"
        [option_7_icon]="üîô"
        [option_7_action]="return_system"
        
        [min_choice]=1
        [max_choice]=7
        [exit_option]=7
    )
    
    export CLEANUP_MENU_CONFIG
}

# Create PHP environment menu template
create_php_menu_template() {
    declare -gA PHP_MENU_CONFIG=(
        [ascii_header]="php"
        [title]="PHP Development Environment"
        [header]="M√îI TR∆Ø·ªúNG PHP"
        [header_icon]="üêò"
        
        [option_1_title]="C√†i ƒë·∫∑t PHP t·ª´ source"
        [option_1_description]="Compile v√† c√†i ƒë·∫∑t PHP phi√™n b·∫£n m·ªõi nh·∫•t"
        [option_1_icon]="‚öôÔ∏è"
        [option_1_action]="install_php_from_source"
        
        [option_2_title]="C√†i ƒë·∫∑t Composer"
        [option_2_description]="C√†i ƒë·∫∑t Composer dependency manager"
        [option_2_icon]="üì¶"
        [option_2_action]="install_composer"
        
        [option_3_title]="C√†i ƒë·∫∑t Laravel"
        [option_3_description]="C√†i ƒë·∫∑t Laravel framework v√† CLI tools"
        [option_3_icon]="üöÄ"
        [option_3_action]="install_laravel"
        
        [option_4_title]="C·∫•u h√¨nh PHP extensions"
        [option_4_description]="C√†i ƒë·∫∑t v√† c·∫•u h√¨nh c√°c PHP extensions c·∫ßn thi·∫øt"
        [option_4_icon]="üîß"
        [option_4_action]="configure_php_extensions"
        
        [option_5_title]="Quay l·∫°i menu ph√°t tri·ªÉn"
        [option_5_description]="Tr·ªü v·ªÅ menu m√¥i tr∆∞·ªùng ph√°t tri·ªÉn"
        [option_5_icon]="üîô"
        [option_5_action]="return_dev"
        
        [min_choice]=1
        [max_choice]=5
        [exit_option]=5
    )
    
    export PHP_MENU_CONFIG
}

# Create NodeJS environment menu template
create_nodejs_menu_template() {
    declare -gA NODEJS_MENU_CONFIG=(
        [ascii_header]="main"
        [title]="NodeJS Development Environment"
        [header]="M√îI TR∆Ø·ªúNG NODEJS"
        [header_icon]="üü¢"
        
        [option_1_title]="C√†i ƒë·∫∑t NVM"
        [option_1_description]="C√†i ƒë·∫∑t Node Version Manager"
        [option_1_icon]="üîß"
        [option_1_action]="install_nvm"
        
        [option_2_title]="C√†i ƒë·∫∑t NodeJS LTS"
        [option_2_description]="C√†i ƒë·∫∑t phi√™n b·∫£n NodeJS ·ªïn ƒë·ªãnh m·ªõi nh·∫•t"
        [option_2_icon]="üü¢"
        [option_2_action]="install_nodejs_lts"
        
        [option_3_title]="C√†i ƒë·∫∑t NodeJS Latest"
        [option_3_description]="C√†i ƒë·∫∑t phi√™n b·∫£n NodeJS m·ªõi nh·∫•t"
        [option_3_icon]="üöÄ"
        [option_3_action]="install_nodejs_latest"
        
        [option_4_title]="C·∫•u h√¨nh NPM"
        [option_4_description]="Thi·∫øt l·∫≠p NPM registry v√† global packages"
        [option_4_icon]="üì¶"
        [option_4_action]="configure_npm"
        
        [option_5_title]="Quay l·∫°i menu ph√°t tri·ªÉn"
        [option_5_description]="Tr·ªü v·ªÅ menu m√¥i tr∆∞·ªùng ph√°t tri·ªÉn"
        [option_5_icon]="üîô"
        [option_5_action]="return_dev"
        
        [min_choice]=1
        [max_choice]=5
        [exit_option]=5
    )
    
    export NODEJS_MENU_CONFIG
}

# Initialize all menu templates
init_menu_templates() {
    log_info "MENU_TEMPLATES" "Initializing menu templates..."
    
    create_main_menu_template
    create_package_menu_template
    create_system_menu_template
    create_dev_menu_template
    create_cleanup_menu_template
    create_php_menu_template
    create_nodejs_menu_template
    
    log_info "MENU_TEMPLATES" "Menu templates initialized successfully"
}

# Get menu configuration by name
get_menu_config() {
    local menu_name="$1"
    local config_var_name="${menu_name^^}_MENU_CONFIG"
    
    if declare -p "$config_var_name" >/dev/null 2>&1; then
        echo "$config_var_name"
        return 0
    else
        log_error "MENU_TEMPLATES" "Menu template not found: $menu_name"
        return 1
    fi
}

# Render menu by name
render_menu_by_name() {
    local menu_name="$1"
    local config_name
    
    config_name=$(get_menu_config "$menu_name")
    if [[ $? -eq 0 ]]; then
        render_full_menu "$config_name"
        return 0
    else
        log_error "MENU_TEMPLATES" "Failed to render menu: $menu_name"
        return 1
    fi
}

# Get menu action for choice
get_menu_action() {
    local menu_name="$1"
    local choice="$2"
    local config_name
    
    config_name=$(get_menu_config "$menu_name")
    if [[ $? -ne 0 ]]; then
        return 1
    fi
    
    declare -n menu_ref="$config_name"
    local action_key="option_${choice}_action"
    
    if [[ -n "${menu_ref[$action_key]:-}" ]]; then
        echo "${menu_ref[$action_key]}"
        return 0
    else
        log_warning "MENU_TEMPLATES" "No action defined for menu: $menu_name, choice: $choice"
        return 1
    fi
}

# Validate menu choice
validate_menu_choice() {
    local menu_name="$1"
    local choice="$2"
    local config_name
    
    config_name=$(get_menu_config "$menu_name")
    if [[ $? -ne 0 ]]; then
        return 1
    fi
    
    declare -n menu_ref="$config_name"
    local min_choice="${menu_ref[min_choice]:-1}"
    local max_choice="${menu_ref[max_choice]:-1}"
    
    if [[ "$choice" -ge "$min_choice" && "$choice" -le "$max_choice" ]]; then
        return 0
    else
        return 1
    fi
}

# Check if choice is exit option
is_exit_choice() {
    local menu_name="$1"
    local choice="$2"
    local config_name
    
    config_name=$(get_menu_config "$menu_name")
    if [[ $? -ne 0 ]]; then
        return 1
    fi
    
    declare -n menu_ref="$config_name"
    local exit_choice="${menu_ref[exit_option]:-1}"
    
    if [[ "$choice" -eq "$exit_choice" ]]; then
        return 0
    else
        return 1
    fi
}

# Export key functions
export -f init_menu_templates get_menu_config render_menu_by_name
export -f get_menu_action validate_menu_choice is_exit_choice
